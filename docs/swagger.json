{
    "swagger": "2.0",
    "info": {
        "description": "An example service in Go using Gin framework.",
        "title": "GO GIN EXAMPLE",
        "contact": {
            "name": "Tu Acoustic",
            "url": "https://tudinhacoustic.github.io/portfolio/",
            "email": "mailto:tudinhacoustic@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.1"
    },
    "host": "localhost:3030",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/users/register": {
            "post": {
                "description": "register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Show an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/users.badRequestResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/entities.Address"
                },
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "description": "UUID      uuid.UUID `gorm:\"type:uuid;default:uuid_generate_v4();not null\" json:\"uuid\"` Only use for postgresdb",
                    "type": "string"
                }
            }
        },
        "users.badRequestResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "in: body",
                    "type": "object",
                    "properties": {
                        "message": {
                            "description": "Error message",
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}